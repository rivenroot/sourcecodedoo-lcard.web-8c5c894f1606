{"version":3,"sources":["material-theme.ts","providers/errorHandler.tsx","providers/toastContainer.tsx","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx","adapters/url-builder.ts","adapters/other.ts","adapters/index.ts","environment.ts","store/url-builder/types.ts","routes/index.tsx","routes/AuthorizedRoute.tsx","routes/NonAuthorizedRoute.tsx","adapters/user.ts","store/url-builder/reducer.ts"],"names":["theme","createTheme","palette","primary","main","light","contrastText","secondary","text","typography","h6","fontWeight","h5","subtitle2","color","body2","fontSize","props","MuiTextField","variant","MuiFormControl","overrides","MuiButton","label","textTransform","ErrorHandlerContext","createContext","ErrorHandlerProvider","children","useEffect","http","interceptors","response","use","data","error","toast","message","Provider","value","ToastContainerContext","ToastContainerProvider","createStore","combineReducers","urlBuilder","UrlBuilderReducer","App","ThemeProvider","StylesProvider","injectFirst","fallback","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URLBUILDERAPI","VideoType","OTHERAPI","getBuilderData","get","GETURLBUILDER","postInformations","params","post","SETINFORMATIONS","postAboutMe","SETABOUTME","postSocialNetworks","SETSOCIALNETWORKS","postVideo","SETVIDEO","postImages","SETIMAGES","postTestimonials","SETTESTIMONIALS","uploadContent","file","formData","FormData","append","UPLOAD","headers","axios","create","baseURL","APIBASE","request","config","Authorization","localStorage","token","UrlBuilderTypes","RoutesProps","AuthorizedRoute","useLocalStorage","to","pathname","LOGIN","decoded","jwt_decode","compareAsc","exp","getUnixTime","Date","clear","NonAuthorizedRoute","URLDESIGNER","Login","lazy","Signup","VerifyAccount","UrlDesigner","Routes","exact","path","component","SIGNUP","VERIFYACCOUNT","UserAPI","initialState","userId","info","phoneNumber","email","calendar","location","website","links","aboutMe","socialNetworks","video","_id","fileName","filePath","mimeType","createdAt","updatedAt","__v","images","testimonials","customCTA","appStores","contactForm","state","action","type","SET_BUILDER_DATA"],"mappings":"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","file":"static/js/main.3dff812c.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core';\n\nexport const theme = createTheme({\n palette: {\n  primary: {\n   main: '#F4A300',\n   light: '#f4b700',\n   contrastText: '#ffffff',\n  },\n  secondary: {\n   main: '#3B7CAD',\n  },\n  text: {\n   secondary: '#A5A5A5',\n  },\n },\n typography: {\n  h6: {\n   fontWeight: 600,\n  },\n  h5: {\n   fontWeight: 600,\n  },\n  subtitle2: {\n   color: '#757575',\n  },\n  body2: {\n   fontSize: 15,\n  },\n },\n props: {\n  MuiTextField: {\n   variant: 'outlined',\n  },\n  MuiFormControl: {\n   variant: 'outlined',\n  },\n },\n overrides: {\n  MuiButton: {\n   label: {\n    textTransform: 'capitalize',\n    fontWeight: 600,\n   },\n  },\n },\n});\n","import { FC, createContext, useEffect } from 'react';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { http } from 'adapters';\nimport { toast } from 'react-toastify';\n\nexport const ErrorHandlerContext = createContext(null);\n\nexport const ErrorHandlerProvider: FC = ({ children }: any) => {\n useEffect(() => {\n  http.interceptors.response.use(\n   (response: AxiosResponse) => {\n    const { data } = response;\n    if (data.error) toast.error(data.message);\n    return response;\n   },\n   (error: AxiosError) => {\n    toast.error(error.response?.data.message || error.message);\n    throw error;\n   }\n  );\n }, []);\n\n return <ErrorHandlerContext.Provider value={null}>{children}</ErrorHandlerContext.Provider>;\n};\n","import { FC, createContext } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ToastContainerContext = createContext(null);\n\nexport const ToastContainerProvider: FC = ({ children }: any) => (\n <ToastContainerContext.Provider value={null}>\n  {children}\n  <ToastContainer />\n </ToastContainerContext.Provider>\n);\n","import { combineReducers, createStore } from 'redux';\nimport { UrlBuilderState } from './url-builder';\nimport UrlBuilderReducer from './url-builder/reducer';\n\nexport interface ApplicationState {\n urlBuilder: UrlBuilderState;\n}\n\nexport default createStore(\n combineReducers({\n  urlBuilder: UrlBuilderReducer,\n })\n);\n","import React, { Suspense } from 'react';\nimport { StylesProvider, ThemeProvider } from '@material-ui/core';\nimport { theme } from 'material-theme';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport Routes from 'routes';\nimport { ErrorHandlerProvider } from 'providers/errorHandler';\nimport { ToastContainerProvider } from 'providers/toastContainer';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nexport const App = () => {\n return (\n  <BrowserRouter>\n   <ThemeProvider theme={theme}>\n    <StylesProvider injectFirst>\n     <Suspense fallback='Loading...'>\n      <ToastContainerProvider>\n       <Provider store={store}>\n        <ErrorHandlerProvider>\n         <Switch>\n          <Routes />\n         </Switch>\n        </ErrorHandlerProvider>\n       </Provider>\n      </ToastContainerProvider>\n     </Suspense>\n    </StylesProvider>\n   </ThemeProvider>\n  </BrowserRouter>\n );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport { App } from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n //  <React.StrictMode>\n <App />,\n //  </React.StrictMode>,\n document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { http } from 'adapters';\nimport { SocialNetworks, Testimonial } from 'store/url-builder';\nimport { ResponseProps } from 'types/response';\n\nexport enum URLBUILDERAPI {\n GETURLBUILDER = '/url-design',\n SETINFORMATIONS = '/url-design/info',\n SETABOUTME = '/url-design/about-me',\n SETSOCIALNETWORKS = '/url-design/social-links',\n SETVIDEO = '/url-design/video',\n SETIMAGES = '/url-design/images',\n SETTESTIMONIALS = '/url-design/testimonials',\n}\n\nexport enum VideoType {\n Regular = 'REGULAR',\n Embeded = 'EMBEDED',\n}\nexport interface PostVideo {\n actionType: VideoType;\n file?: any;\n videoUrl?: string;\n}\n\nexport const getBuilderData = () => http.get<ResponseProps>(URLBUILDERAPI.GETURLBUILDER);\nexport const postInformations = (params: any) => http.post<ResponseProps>(URLBUILDERAPI.SETINFORMATIONS, params);\nexport const postAboutMe = (text: any) => http.post<ResponseProps>(URLBUILDERAPI.SETABOUTME, { text });\nexport const postSocialNetworks = (params: SocialNetworks[]) => http.post<ResponseProps>(URLBUILDERAPI.SETSOCIALNETWORKS, params);\nexport const postVideo = (params: PostVideo) => http.post<ResponseProps>(URLBUILDERAPI.SETVIDEO, params);\nexport const postImages = (params: string[]) => http.post<ResponseProps>(URLBUILDERAPI.SETIMAGES, params);\nexport const postTestimonials = (params: Testimonial[]) => http.post<ResponseProps>(URLBUILDERAPI.SETTESTIMONIALS, params);\n","import { http } from '.';\nimport { ResponseProps } from './../types/response';\n\nexport enum OTHERAPI {\n UPLOAD = '/user-file/upload',\n}\n\nexport const uploadContent = (file: File) => {\n const formData = new FormData();\n formData.append('file', file);\n\n return http.post<ResponseProps>(OTHERAPI.UPLOAD, formData, {\n  headers: {\n   'Content-Type': 'multipart/form-data',\n  },\n });\n};\n","import { APIBASE } from './../environment';\nimport axios from 'axios';\n\nexport * from './user';\nexport * from './url-builder';\nexport * from './other';\n\nexport const http = axios.create({\n baseURL: APIBASE,\n});\n\nhttp.interceptors.request.use((config) => {\n config.headers.Authorization = 'Barer ' + localStorage.token;\n return config;\n});","export const APIBASE = 'https://lcard.startify.dev:8000';\n","export enum UrlBuilderTypes {\n SET_BUILDER_DATA = 'SET_BUILDER_DATA',\n}\n\nexport interface Info {\n phoneNumber: string;\n email: string;\n calendar: string;\n location: string;\n website: string;\n links: InfoLinks[];\n}\n\nexport interface InfoLinks {\n title: string;\n url: string;\n}\n\nexport interface AboutMe {\n text: string;\n}\n\nexport interface SocialNetworks {\n networkName: string;\n url: string;\n}\n\nexport interface UploadType {\n _id: string;\n fileName: string;\n filePath: string;\n mimeType: string;\n createdAt: string;\n updatedAt: string;\n __v: number;\n}\n\nexport interface Testimonial {\n rating: number;\n comment: string;\n userPhoto: UploadType;\n fullName: string;\n title: string;\n}\n\nexport interface UrlBuilderState {\n userId: string;\n info: Info;\n aboutMe: AboutMe;\n socialNetworks: SocialNetworks[];\n video: {\n  file: UploadType;\n };\n images: UploadType[];\n testimonials: Testimonial[];\n customCTA: any;\n appStores: any;\n contactForm: any;\n}\n","import { lazy } from 'react';\nimport { AuthorizedRoute } from './AuthorizedRoute';\nimport { NonAuthorizedRoute } from './NonAuthorizedRoute';\n\nconst Login = lazy(() => import('components/auth/login'));\nconst Signup = lazy(() => import('components/auth/signup'));\nconst VerifyAccount = lazy(() => import('components/auth/verifyAccount'));\nconst UrlDesigner = lazy(() => import('components/url-desinger'));\n\nexport enum RoutesProps {\n HOME = '/',\n LOGIN = '/login',\n SIGNUP = '/signup',\n VERIFYACCOUNT = '/verify-account',\n URLDESIGNER = '/url-designer',\n}\n\nexport default function Routes() {\n return (\n  <>\n   <NonAuthorizedRoute exact path={RoutesProps.LOGIN} component={Login} />\n   <NonAuthorizedRoute exact path={RoutesProps.SIGNUP} component={Signup} />\n   <NonAuthorizedRoute exact path={RoutesProps.VERIFYACCOUNT} component={VerifyAccount} />\n   <AuthorizedRoute exact path={RoutesProps.URLDESIGNER} component={UrlDesigner} />\n  </>\n );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { RoutesProps } from 'routes';\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\nimport { compareAsc, getUnixTime } from 'date-fns';\n\nexport const AuthorizedRoute = (props: any) => {\n const [token] = useLocalStorage('token');\n\n if (!token) return <Redirect to={{ pathname: RoutesProps.LOGIN }} />;\n\n const decoded = jwt_decode<JwtPayload>(token, {});\n const validToken = compareAsc(decoded.exp || 0, getUnixTime(new Date()));\n\n if (!validToken) {\n  localStorage.clear();\n  return <Redirect to={{ pathname: RoutesProps.LOGIN }} />;\n }\n\n return <Route {...props} />;\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { RoutesProps } from 'routes';\n\nexport const NonAuthorizedRoute = (props: any) => {\n const [token] = useLocalStorage('token');\n\n if (token)\n  return (\n   <Redirect\n    to={{\n     pathname: RoutesProps.URLDESIGNER,\n    }}\n   />\n  );\n\n return <Route {...props} />;\n};\n","export enum UserAPI {\n LOGIN = '/users/login',\n LOGOUT = '/users/logout',\n SIGNUP = '/users/signup',\n ACTIVATE = '/users/activate',\n}\n","import { UrlBuilderTypes } from './types';\nimport { Reducer } from 'redux';\nimport { UrlBuilderState } from '.';\n\nconst initialState: UrlBuilderState = {\n userId: '',\n info: {\n  phoneNumber: '',\n  email: '',\n  calendar: '',\n  location: '',\n  website: '',\n  links: [],\n },\n aboutMe: { text: '' },\n socialNetworks: [],\n video: {\n  file: {\n   _id: '',\n   fileName: '',\n   filePath: '',\n   mimeType: '',\n   createdAt: '',\n   updatedAt: '',\n   __v: 0,\n  },\n },\n images: [],\n testimonials: [],\n customCTA: null,\n appStores: null,\n contactForm: null,\n};\n\nconst UrlBuilderReducer: Reducer<UrlBuilderState> = (state = initialState, action: any) => {\n switch (action.type) {\n  case UrlBuilderTypes.SET_BUILDER_DATA: {\n   return { ...action.data };\n  }\n  default:\n   return state;\n }\n};\n\nexport default UrlBuilderReducer;\n"],"sourceRoot":""}