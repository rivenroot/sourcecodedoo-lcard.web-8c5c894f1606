{"version":3,"sources":["styles/buttons/rounded-button.module.scss","components/shared/lcard-badge/index.tsx","components/url-desinger/social-network/social-network.module.scss","styles/buttons/dashed-button.module.scss","styles/hover-overlay.module.scss","components/url-desinger/information/information.module.scss","components/url-desinger/about-me/about-me.module.scss","components/url-desinger/about-me/edit-about-me-dialog/edit-about-me-dialog.module.scss","styles/buttons/circle-button.module.scss","components/url-desinger/testimonials/testimonial-carousel/testimonial-carousel-item/testimonial-carousel-item.module.scss","components/url-desinger/social-network/add-social/index.tsx","assets/card-sample.png","components/business-card/index.tsx","components/shared/dialog/dialog-header/index.tsx","components/shared/dialog/index.tsx","components/shared/input/index.tsx","store/url-builder/actions.ts","store/url-builder/selectors.ts","components/url-desinger/information/edit-information-dialog/index.tsx","components/url-desinger/information/index.tsx","components/url-desinger/about-me/edit-about-me-dialog/index.tsx","components/url-desinger/about-me/index.tsx","components/url-desinger/social-network/add-image/index.tsx","components/url-desinger/social-network/add-video/add-video-dialog/upload-video-button/index.tsx","components/url-desinger/social-network/add-video/add-video-dialog/add-embed-video/index.tsx","components/url-desinger/social-network/add-video/add-video-dialog/index.tsx","components/url-desinger/social-network/add-video/index.tsx","components/url-desinger/social-network/add-social/add-social-dialog/index.tsx","components/url-desinger/app-stores/index.tsx","components/url-desinger/social-network/index.tsx","components/url-desinger/testimonials/testimonials-dialog/index.tsx","components/url-desinger/testimonials/testimonial-carousel/testimonial-carousel-item/index.tsx","components/url-desinger/testimonials/testimonial-carousel/index.tsx","components/url-desinger/testimonials/index.tsx","components/url-desinger/custom-CTA/custom-cta-dialog/index.tsx","components/url-desinger/custom-CTA/index.tsx","components/url-desinger/app-stores/app-stores-dialog/index.tsx","components/url-desinger/contact-me/contact-me-dialog/index.tsx","components/url-desinger/contact-me/index.tsx","components/url-desinger/index.tsx"],"names":["module","exports","LcardBadge","variant","color","component","SocialProvider","BusinessCard","Card","src","sampleImage","alt","style","display","width","DialogHeader","title","onClose","Box","justifyContent","alignItems","Typography","IconButton","onClick","Divider","DialogWrapper","children","loading","onSubmit","rest","Dialog","scroll","Grid","container","item","xs","margin","padding","spacing","Button","className","roundedButtonStyle","root","size","fullWidth","disabled","CircularProgress","Input","label","TextField","SetUrlBuilderData","data","type","UrlBuilderTypes","SET_BUILDER_DATA","GetUrlBuilderData","state","urlBuilder","schemaInformation","yup","shape","phoneNumber","email","location","website","EditInformationDialog","isOpen","dispatch","useDispatch","builderData","useSelector","useState","setLoading","info","links","setLinks","useForm","resolver","yupResolver","defaultValues","handleSubmit","control","errors","formState","handleLinkChange","link","index","updatedLinks","open","formData","postInformations","then","success","finally","Object","keys","fields","map","key","field","name","render","onChange","value","spec","error","helperText","message","gutterBottom","idx","e","target","url","filter","removeLink","textTransform","Information","informationDialog","setInformationDialog","hoverStyle","wrapIcon","root_content","fontSize","options","EditAboutMeDialog","editorInitValue","aboutMe","EditorState","createWithContent","stateFromHTML","text","createEmpty","editorState","setEditorState","aboutMeHtmlInput","stateToHTML","getCurrentContent","postAboutMe","editorClassName","editor","wrapperClassName","editorContainer","toolbarClassName","toolbar","onEditorStateChange","AboutMe","editAboutMeDialog","setEditAboutMeDialog","classes","defaultImageValue","_id","fileName","filePath","mimeType","createdAt","updatedAt","__v","ImportImagesCarousel","loadingImage","setLoadingImage","handleImageSelect","a","files","length","file","uploadContent","uploadedImageResponse","Error","currentImagesIds","images","image","postImages","builderResponse","slidesPerRow","infinite","textAlign","position","accept","id","htmlFor","imageButton","includes","APIBASE","controls","UploadVideoButton","video","setVideo","videoFile","videoButton","AddEmbedVideo","AddVideoDialog","tab","setTab","postVideo","actionType","VideoType","Regular","Tabs","indicatorColor","textColor","event","newValue","Tab","VideoUpload","params","openDialog","setOpenDialog","AddSocialDialog","socialNetworks","socials","setSocials","postSocialNetworks","social","FormControl","Select","socialSelect","labelId","networkName","provider","_socials","selectProvider","sProvider","MenuItem","marginRight","getSocialIcon","height","changeUrl","_","removeSocial","Store","FACEBOOK","INSTAGRAM","PINTEREST","AddSocial","Fab","networksButton","SocialNetwork","schema","rating","required","comment","fullName","TestimonialsDialog","userImage","setUserImage","register","submit","Number","avatarImage","userPhoto","postTestimonials","testimonials","Rating","FormHelperText","multiline","rows","circleButton","TestimonialCarouselItem","testimonial","styles","card","flexDirection","Avatar","avatar","reviewerName","reviewerTitle","TestimonialCarousel","adaptiveHeight","dots","Testimonials","dialog","setDialog","paddingBottom","dashedButtonStyle","buttonName","CustomCTADialog","console","log","CustomCTA","AppStoresDialog","stores","setStores","tempStores","setTempStores","tStore","_store","selectStore","store","AppStores","ContactMeDialog","editable","setFields","onDragEnd","result","destination","items","list","startIndex","endIndex","splice","removed","reorder","source","TableContainer","overflow","Table","TableHead","TableRow","TableCell","align","droppableId","provided","TableBody","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","ContactMe","contactMeDialog","setContactMeDialog","URLDesigner","useEffect","getBuilderData","Container","maxWidth"],"mappings":"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","file":"static/js/7.d80922fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"rounded-button_root__3zehj\"};","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const LcardBadge = () => (\n  <Typography variant='h6' color=\"primary\" component=\"span\">\n   L-CARD PRO\n  </Typography>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"networksButton\":\"social-network_networksButton__1yhtQ\",\"videoButton\":\"social-network_videoButton__3VMOJ\",\"imageButton\":\"social-network_imageButton__1dAy2\",\"socialSelect\":\"social-network_socialSelect__2wHXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"dashed-button_root__3GAhG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"hover-overlay_root__14J8o\",\"root_content\":\"hover-overlay_root_content__Wzabt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapIcon\":\"information_wrapIcon__1dmaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"about-me_root__28tCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorContainer\":\"edit-about-me-dialog_editorContainer__3wVIw\",\"editor\":\"edit-about-me-dialog_editor__3ewrP\",\"toolbar\":\"edit-about-me-dialog_toolbar__2B_mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"circle-button_root__uLcH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"testimonial-carousel-item_card__2BWDq\",\"avatar\":\"testimonial-carousel-item_avatar__FhljZ\",\"reviewerName\":\"testimonial-carousel-item_reviewerName__262fW\",\"reviewerTitle\":\"testimonial-carousel-item_reviewerTitle__kt-pO\"};","import React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Fab, Grid } from '@material-ui/core';\nimport style from '../social-network.module.scss';\nimport { AddSocialDialog } from './add-social-dialog';\nimport { FaFacebook, FaInstagram, FaPinterest } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { GetUrlBuilderData } from 'store/url-builder';\n\nexport enum SocialProvider {\n FACEBOOK = 'Facebook',\n INSTAGRAM = 'Instagram',\n PINTEREST = 'Pinerest',\n}\n\nexport const getSocialIcon = (provider: SocialProvider, { width, height }: { width: number; height: number }) => {\n switch (provider) {\n  case SocialProvider.FACEBOOK:\n   return <FaFacebook style={{ width, height }} />;\n  case SocialProvider.INSTAGRAM:\n   return <FaInstagram style={{ width, height }} />;\n  case SocialProvider.PINTEREST:\n   return <FaPinterest style={{ width, height }} />;\n }\n};\n\nexport const AddSocial = () => {\n const builderData = useSelector(GetUrlBuilderData);\n const [openDialog, setOpenDialog] = useState(false);\n const handleDialogClose = () => setOpenDialog(false);\n\n return (\n  <Grid container spacing={1}>\n   {builderData.socialNetworks.map((social) => {\n    if (social.networkName.length === 0) return '';\n    return (\n     <Grid item>\n      <Fab onClick={() => setOpenDialog(true)} aria-label='add'>\n       {getSocialIcon(social.networkName as SocialProvider, { width: 56, height: 56 })}\n      </Fab>\n     </Grid>\n    );\n   })}\n   <Grid item>\n    <Fab onClick={() => setOpenDialog(true)} classes={{ root: style.networksButton }} color='primary' aria-label='add'>\n     <AddIcon />\n    </Fab>\n   </Grid>\n   {openDialog && <AddSocialDialog isOpen={openDialog} onClose={handleDialogClose} />}\n  </Grid>\n );\n};\n","export default __webpack_public_path__ + \"static/media/card-sample.ee204e98.png\";","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport sampleImage from '../../assets/card-sample.png';\n\nexport const BusinessCard = () => {\n return (\n  <Card>\n   <img src={sampleImage} alt='samle card' style={{ display: 'flex', width: '100%' }} />\n  </Card>\n );\n};\n","import { Box, Divider, IconButton, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React from 'react';\n\nexport interface DialogHeaderProps {\n title: string;\n onClose: any;\n}\n\nexport const DialogHeader = ({ title, onClose }: DialogHeaderProps) => (\n <>\n  <Box width='100%' display='flex' justifyContent='space-between' alignItems='center'>\n   <Typography variant='h5'>{title}</Typography>\n   <IconButton onClick={onClose}>\n    <CloseIcon />\n   </IconButton>\n  </Box>\n  <Divider />\n </>\n);\n","import React, { FC } from 'react';\nimport { Dialog, Grid, Button, CircularProgress, DialogProps } from '@material-ui/core';\nimport { DialogHeader } from './dialog-header';\nimport roundedButtonStyle from 'styles/buttons/rounded-button.module.scss';\n\nexport interface DialogWrapperProps extends DialogProps {\n open: boolean;\n loading: boolean;\n title: string;\n onSubmit(): void;\n}\n\nexport const DialogWrapper: FC<DialogWrapperProps> = ({ children, onClose, title, loading, onSubmit, ...rest }) => {\n return (\n  <Dialog onClose={onClose} {...rest} scroll='body'>\n   <Grid container item xs={12} style={{ margin: 0, padding: '.5em 1em' }} spacing={3} justifyContent='center'>\n    <Grid item xs={12}>\n     <DialogHeader title={title} onClose={onClose} />\n    </Grid>\n    <Grid item container xs={12}>\n     {children}\n    </Grid>\n    <Grid item xs={12}>\n     <Button className={roundedButtonStyle.root} onClick={onSubmit} color='primary' size='large' variant='contained' fullWidth disabled={loading}>\n      {loading ? <CircularProgress size={24} /> : 'Save'}\n     </Button>\n    </Grid>\n   </Grid>\n  </Dialog>\n );\n};\n","import { Typography, TextField, BaseTextFieldProps } from '@material-ui/core';\nimport React, { FC } from 'react';\n\nexport interface InputProps extends BaseTextFieldProps {\n label: string;\n onChange?: any;\n}\n\nexport const Input: FC<InputProps> = ({ label, ...rest }) => (\n <>\n  <Typography variant='subtitle2'>{label}</Typography>\n  <TextField {...rest} />\n </>\n);\n","import { UrlBuilderTypes } from './types';\n\nexport const SetUrlBuilderData = (data: any) => ({\n type: UrlBuilderTypes.SET_BUILDER_DATA,\n data,\n});\n","import { ApplicationState } from './../index';\n\nexport const GetUrlBuilderData = (state: ApplicationState) => state.urlBuilder;\n","import React, { useState } from 'react';\nimport { Button, Grid, IconButton, TextField, Typography } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport AddIcon from '@material-ui/icons/Add';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport { Input } from 'components/shared/input';\nimport { postInformations } from 'adapters';\nimport { GetUrlBuilderData, InfoLinks, SetUrlBuilderData } from 'store/url-builder';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst schemaInformation = yup.object().shape({\n phoneNumber: yup.string().label('Phone Number'),\n email: yup.string().email().label('Email'),\n location: yup.string().label('Location'),\n website: yup.string().label('Website'),\n});\n\nexport interface EditInformationDialogProps {\n isOpen: boolean;\n onClose(): void;\n}\n\nexport const EditInformationDialog = ({ isOpen, onClose }: EditInformationDialogProps) => {\n const dispatch = useDispatch();\n const builderData = useSelector(GetUrlBuilderData);\n const [loading, setLoading] = useState(false);\n const [links, setLinks] = useState<InfoLinks[]>(builderData.info.links);\n\n const {\n  handleSubmit,\n  control,\n  formState: { errors },\n } = useForm<any>({ resolver: yupResolver(schemaInformation), defaultValues: builderData.info });\n\n const handleLinkChange = (link: InfoLinks, index: number) => {\n  const updatedLinks = [...links];\n  updatedLinks[index] = link;\n  setLinks(updatedLinks);\n };\n\n const addLink = () => setLinks([...links, { title: '', url: '' }]);\n const removeLink = (idx: number) => setLinks(links.filter((link, index) => idx !== index));\n\n const submit = (formData: any) => {\n  setLoading(true);\n  postInformations({ ...formData, links })\n   .then(({ data }) => {\n    if (!data.success) return;\n    dispatch(SetUrlBuilderData(data.data));\n    onClose();\n   })\n   .finally(() => setLoading(false));\n };\n\n return (\n  <DialogWrapper open={isOpen} onClose={onClose} onSubmit={handleSubmit(submit)} loading={loading} title='Edit Information'>\n   {Object.keys(schemaInformation.fields).map((key) => {\n    const field = schemaInformation.fields[key] as any;\n    return (\n     <Grid key={key} item xs={12} className='mb-3'>\n      <Controller\n       control={control}\n       name={key}\n       render={({ field: { onChange, value } }) => (\n        <Input\n         label={field.spec.label}\n         onChange={onChange}\n         value={value}\n         error={!!errors[key]}\n         helperText={errors[key]?.message}\n         fullWidth\n         disabled={loading}\n        />\n       )}\n      />\n     </Grid>\n    );\n   })}\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>\n     Links\n    </Typography>\n   </Grid>\n   <Grid container item xs={12} spacing={2} className='mb-3'>\n    {links.map((link, idx) => (\n     <>\n      <Grid item>\n       <Typography variant='subtitle2'>Title</Typography>\n       <TextField onChange={(e) => handleLinkChange({ ...link, title: e.target.value }, idx)} value={link.title} fullWidth disabled={loading} />\n      </Grid>\n      <Grid item>\n       <Typography variant='subtitle2'>URL</Typography>\n       <TextField onChange={(e) => handleLinkChange({ ...link, url: e.target.value }, idx)} value={link.url} fullWidth disabled={loading} />\n      </Grid>\n      <Grid item container alignItems='flex-end' xs={1}>\n       <IconButton onClick={() => removeLink(idx)} className='mb-1'>\n        <HighlightOffIcon color='error' />\n       </IconButton>\n      </Grid>\n     </>\n    ))}\n   </Grid>\n   <Grid item container xs={12} justifyContent='center'>\n    <Button onClick={addLink} style={{ textTransform: 'none' }}>\n     <AddIcon /> Add New Link\n    </Button>\n   </Grid>\n  </DialogWrapper>\n );\n};\n","import { Box, Grid, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport CallIcon from '@material-ui/icons/Call';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport ChromeReaderModeIcon from '@material-ui/icons/ChromeReaderMode';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\nimport LanguageOutlinedIcon from '@material-ui/icons/LanguageOutlined';\nimport LinkOutlinedIcon from '@material-ui/icons/LinkOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport style from './information.module.scss';\nimport hoverStyle from 'styles/hover-overlay.module.scss';\nimport { EditInformationDialog } from './edit-information-dialog';\n\nexport const Information = () => {\n const [informationDialog, setInformationDialog] = useState(false);\n\n const openInformationDialog = () => setInformationDialog(true);\n const handleCloseInformationDialog = () => setInformationDialog(false);\n\n return (\n  <Box className={hoverStyle.root} width='100%' display='flex'>\n   <Grid item container xs={12} style={{ padding: '1.5em' }} spacing={4}>\n    <Grid item container xs={12} justifyContent='space-between'>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <CallIcon color='primary' /> <b>Call</b>\n     </Typography>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <MailOutlineIcon color='primary' /> <b>Email</b>\n     </Typography>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <ChromeReaderModeIcon color='primary' /> <b>Card Info</b>\n     </Typography>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <CropFreeIcon color='primary' /> <b>QR Code</b>\n     </Typography>\n    </Grid>\n    <Grid item container xs={12} justifyContent='space-between'>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <DateRangeIcon color='primary' /> <b>Calendar</b>\n     </Typography>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <RoomOutlinedIcon color='primary' /> <b>Navigate</b>\n     </Typography>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <LanguageOutlinedIcon color='primary' /> <b>Website</b>\n     </Typography>\n     <Typography variant='subtitle2' color='textPrimary' className={style.wrapIcon}>\n      <LinkOutlinedIcon color='primary' /> <b>Links</b>\n     </Typography>\n    </Grid>\n   </Grid>\n   <Grid onClick={openInformationDialog} item xs={12} className={hoverStyle.root_content}>\n    <Typography variant='subtitle2' className='d-flex aling-items_center' color='textSecondary'>\n     <EditOutlinedIcon fontSize='small' /> <b>Edit Information</b>\n    </Typography>\n   </Grid>\n   {informationDialog && <EditInformationDialog isOpen={informationDialog} onClose={handleCloseInformationDialog} />}\n  </Box>\n );\n};\n","import React, { useState } from 'react';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState } from 'draft-js';\nimport style from './edit-about-me-dialog.module.scss';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport { postAboutMe } from 'adapters';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetUrlBuilderData, SetUrlBuilderData } from 'store/url-builder';\nimport { stateToHTML } from 'draft-js-export-html';\nimport { stateFromHTML } from 'draft-js-import-html';\n\nconst options = {\n options: ['inline', 'blockType', 'fontSize', 'fontFamily', 'textAlign', 'emoji'],\n};\n\nexport interface EditAboutMeDialogProps {\n isOpen: boolean;\n onClose(): void;\n}\n\nexport const EditAboutMeDialog = ({ isOpen, onClose }: EditAboutMeDialogProps) => {\n const [loading, setLoading] = useState(false);\n const builderData = useSelector(GetUrlBuilderData);\n const editorInitValue = builderData.aboutMe ? EditorState.createWithContent(stateFromHTML(builderData.aboutMe.text)) : EditorState.createEmpty();\n const [editorState, setEditorState] = useState(() => editorInitValue);\n const dispatch = useDispatch();\n\n const submit = () => {\n  setLoading(true);\n  const aboutMeHtmlInput = stateToHTML(editorState.getCurrentContent());\n  postAboutMe(aboutMeHtmlInput)\n   .then(({ data }) => {\n    if (!data.success) return;\n    dispatch(SetUrlBuilderData(data.data));\n    onClose();\n   })\n   .finally(() => setLoading(false));\n };\n\n return (\n  <DialogWrapper open={isOpen} onClose={onClose} loading={loading} onSubmit={submit} title='About Me'>\n   <Editor\n    editorClassName={style.editor}\n    wrapperClassName={style.editorContainer}\n    toolbarClassName={style.toolbar}\n    toolbar={options}\n    editorState={editorState}\n    onEditorStateChange={setEditorState}\n   />\n  </DialogWrapper>\n );\n};\n","import { Button, Grid, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport style from './about-me.module.scss';\nimport { EditAboutMeDialog } from './edit-about-me-dialog';\n\nexport const AboutMe = () => {\n const [editAboutMeDialog, setEditAboutMeDialog] = useState(false);\n\n const openEditAboutMeDialog = () => setEditAboutMeDialog(true);\n const handleEditAboutMeDialogClose = () => setEditAboutMeDialog(false);\n\n return (\n  <Grid item container xs={12}>\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>About Me</Typography>\n   </Grid>\n   <Grid item xs={12}>\n    <Button onClick={openEditAboutMeDialog} classes={{ root: style.root }} fullWidth>\n     <AddIcon /> Add Text\n    </Button>\n   </Grid>\n   {editAboutMeDialog && <EditAboutMeDialog isOpen={editAboutMeDialog} onClose={handleEditAboutMeDialogClose} />}\n  </Grid>\n );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { Box, Button, CircularProgress } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport style from '../social-network.module.scss';\nimport Slider from 'react-slick';\nimport { postImages, uploadContent } from 'adapters';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetUrlBuilderData, UploadType, SetUrlBuilderData } from 'store/url-builder';\nimport { APIBASE } from 'environment';\nimport ReactPlayer from 'react-player';\n\nconst defaultImageValue: UploadType = {\n _id: '',\n fileName: '',\n filePath: '',\n mimeType: '',\n createdAt: '',\n updatedAt: '',\n __v: 0,\n};\n\nexport const ImportImagesCarousel = () => {\n const builderData = useSelector(GetUrlBuilderData);\n const [loadingImage, setLoadingImage] = useState<{ [key: string]: any }>({});\n const dispatch = useDispatch();\n\n const handleImageSelect = async (e: ChangeEvent<HTMLInputElement>, idx: number) => {\n  if (!e.target.files?.length || loadingImage[idx]) return;\n\n  loadingImage[idx] = true;\n  setLoadingImage({ ...loadingImage });\n  const file = e.target.files[0];\n\n  try {\n   const uploadedImageResponse = (await uploadContent(file)).data;\n   if (!uploadedImageResponse.success) throw new Error(uploadedImageResponse.message);\n\n   const currentImagesIds = builderData.images.map((image) => image._id);\n   const builderResponse = (await postImages([...currentImagesIds, uploadedImageResponse.data._id])).data;\n   if (!builderResponse.success) throw new Error(builderResponse.message);\n   dispatch(SetUrlBuilderData(builderResponse.data));\n  } catch (er) {}\n\n  loadingImage[idx] = false;\n  setLoadingImage({ ...loadingImage });\n };\n\n return (\n  <Slider slidesPerRow={3} infinite={false}>\n   {[...builderData.images, defaultImageValue].map((image, idx) => (\n    <Box key={idx} textAlign='center' position='relative'>\n     <input\n      onChange={(e) => handleImageSelect(e, idx)}\n      style={{ display: 'none' }}\n      accept='image/*'\n      id={'image-upload- ' + idx}\n      type='file'\n      disabled={loadingImage[idx]}\n     />\n     <label htmlFor={'image-upload- ' + idx}>\n      <Button className={style.imageButton} component='span' disabled={loadingImage[idx]}>\n       {image.filePath ? (\n        <>\n         {image.mimeType.includes('image') ? (\n          <img src={APIBASE + '/' + image.filePath} alt={image.fileName} width='100%' />\n         ) : (\n          <ReactPlayer url={APIBASE + '/' + image.filePath} controls width='100%' />\n         )}\n        </>\n       ) : (\n        <>\n         {loadingImage[idx] ? (\n          <CircularProgress />\n         ) : (\n          <>\n           <AddIcon /> Add Image\n          </>\n         )}\n        </>\n       )}\n      </Button>\n     </label>\n    </Box>\n   ))}\n  </Slider>\n );\n};\n","import { Button, CircularProgress } from '@material-ui/core';\nimport React, { ChangeEvent, useState } from 'react';\nimport style from '../../../social-network.module.scss';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { uploadContent } from 'adapters';\nimport ReactPlayer from 'react-player';\nimport { APIBASE } from 'environment';\n\nexport interface UploadVideoButtonProps {\n video: any;\n setVideo(video: any): void;\n}\n\nexport const UploadVideoButton = ({ video, setVideo }: UploadVideoButtonProps) => {\n const [loading, setLoading] = useState(false);\n\n const handleVideoSelect = (e: ChangeEvent<HTMLInputElement>) => {\n  if (e.target.files === null) return;\n\n  setLoading(true);\n  const videoFile = e.target.files[0];\n  uploadContent(videoFile)\n   .then(({ data }) => {\n    if (!data.success) return;\n    setVideo(data.data);\n   })\n   .finally(() => setLoading(false));\n };\n\n if (video) return <ReactPlayer url={APIBASE + '/' + video.filePath} controls width=\"100%\" />;\n\n return (\n  <>\n   <input onChange={handleVideoSelect} style={{ display: 'none' }} accept='video/*' id='video-upload' type='file' disabled={loading} />\n   <label htmlFor='video-upload'>\n    <Button className={style.videoButton} component='span' disabled={loading}>\n     {loading ? (\n      <CircularProgress />\n     ) : (\n      <>\n       <AttachFileIcon /> Attach Your Video\n      </>\n     )}\n    </Button>\n   </label>\n  </>\n );\n};\n","import React from 'react'\n\nexport const AddEmbedVideo = () => {\n\n    return <>Embed video component</>\n}","import { Grid, Tab, Tabs } from '@material-ui/core';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport React, { useState } from 'react';\nimport { UploadVideoButton } from './upload-video-button';\nimport { AddEmbedVideo } from './add-embed-video';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetUrlBuilderData, SetUrlBuilderData, UploadType } from 'store/url-builder';\nimport { postVideo, VideoType } from 'adapters';\n\nexport interface AddVideoDialogProps {\n open: boolean;\n onClose(): void;\n}\n\nexport const AddVideoDialog = ({ onClose, open }: AddVideoDialogProps) => {\n const builderData = useSelector(GetUrlBuilderData);\n const [loading, setLoading] = useState(false);\n const [video, setVideo] = useState<UploadType>(builderData.video?.file);\n const [tab, setTab] = useState(0);\n const dispatch = useDispatch();\n\n const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => setTab(newValue);\n\n const handleSubmit = () => {\n  setLoading(true);\n  postVideo({ file: video._id, actionType: VideoType.Regular })\n   .then(({ data }) => {\n    if (!data.success) return;\n    dispatch(SetUrlBuilderData(data.data));\n    onClose();\n   })\n   .finally(() => setLoading(false));\n };\n\n return (\n  <DialogWrapper title='Social Networks' onClose={onClose} open={open} onSubmit={handleSubmit} loading={loading}>\n   <Grid item xs={12} className='mb-3'>\n    <Tabs value={tab} indicatorColor='primary' textColor='primary' onChange={handleChange} variant='fullWidth'>\n     <Tab label='Upload Video' />\n     <Tab label='Embed Video' />\n    </Tabs>\n   </Grid>\n   {tab === 0 && (\n    <Grid item xs={12}>\n     <UploadVideoButton video={video} setVideo={setVideo} />\n    </Grid>\n   )}\n   {tab === 1 && (\n    <Grid item xs={12}>\n     <AddEmbedVideo />\n    </Grid>\n   )}\n  </DialogWrapper>\n );\n};\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport style from '../social-network.module.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddVideoDialog } from './add-video-dialog';\n\nexport const VideoUpload = (params: any) => {\n const [openDialog, setOpenDialog] = useState(false);\n\n return (\n  <>\n   <Button onClick={() => setOpenDialog(true)} className={style.videoButton}>\n    <AddIcon /> Embed Video\n   </Button>\n   {openDialog && <AddVideoDialog open={openDialog} onClose={() => setOpenDialog(false)} />}\n  </>\n );\n};\n","import React, { useState } from 'react';\nimport { Box, Button, FormControl, Grid, IconButton, MenuItem, Select, TextField, Typography } from '@material-ui/core';\nimport { SocialProvider, getSocialIcon } from '..';\nimport AddIcon from '@material-ui/icons/Add';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport style from '../../social-network.module.scss';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetUrlBuilderData, SetUrlBuilderData } from 'store/url-builder';\nimport { postSocialNetworks } from 'adapters';\n\ninterface AddSocialDialogProps {\n isOpen: boolean;\n onClose(): void;\n}\n\nexport const AddSocialDialog = ({ isOpen, onClose }: AddSocialDialogProps) => {\n const builderData = useSelector(GetUrlBuilderData);\n const dispatch = useDispatch();\n const [loading, setLoading] = useState(false);\n const [socials, setSocials] = useState(builderData.socialNetworks);\n\n const handleSubmit = () => {\n  setLoading(true);\n\n  postSocialNetworks(socials)\n   .then(({ data }) => {\n    if (!data.success) return;\n    dispatch(SetUrlBuilderData(data.data));\n    onClose();\n   })\n   .finally(() => setLoading(false));\n };\n\n const selectProvider = (provider: SocialProvider, idx: number) => {\n  const _socials = [...socials];\n  _socials[idx].networkName = provider;\n  setSocials(_socials);\n };\n\n const changeUrl = (url: string, idx: number) => {\n  const _socials = [...socials];\n  _socials[idx].url = url;\n  setSocials(_socials);\n };\n\n const addNewSocial = () => setSocials([...socials, { networkName: '', url: '' }]);\n\n const removeSocial = (idx: number) => setSocials(socials.filter((_, index) => index !== idx));\n\n return (\n  <DialogWrapper title='Social Networks' onClose={onClose} open={isOpen} onSubmit={handleSubmit} loading={loading}>\n   {socials.map((social, idx) => (\n    <Grid container item xs={12} className='mb-3'>\n     <Grid xs className='mr-2'>\n      <Typography variant='subtitle2'>Select Social Network</Typography>\n      <FormControl fullWidth>\n       <Select\n        classes={{ root: style.socialSelect }}\n        labelId='providers-label'\n        id='providers'\n        value={social.networkName}\n        onChange={(e) => selectProvider(e.target.value as SocialProvider, idx)}>\n        {Object.keys(SocialProvider).map((key) => {\n         const sProvider = (SocialProvider as any)[key];\n         return (\n          <MenuItem value={sProvider}>\n           <Box display='inline-flex' alignItems='center'>\n            <Box marginRight='5px' display='inline-flex'>\n             {getSocialIcon(sProvider, { width: 24, height: 24 })}\n            </Box>\n            {sProvider}\n           </Box>\n          </MenuItem>\n         );\n        })}\n       </Select>\n      </FormControl>\n     </Grid>\n     <Grid xs className='ml-2'>\n      <Typography variant='subtitle2'>Enter URL</Typography>\n      <TextField value={social.url} onChange={(e) => changeUrl(e.target.value, idx)} fullWidth />\n     </Grid>\n     <Grid item container alignItems='flex-end' xs={1}>\n      <IconButton onClick={() => removeSocial(idx)} className='mb-1'>\n       <HighlightOffIcon color='error' />\n      </IconButton>\n     </Grid>\n    </Grid>\n   ))}\n   <Grid item container xs={12} justifyContent='center'>\n    <Button onClick={addNewSocial} style={{ textTransform: 'none' }}>\n     <AddIcon /> Add New Social Network\n    </Button>\n   </Grid>\n  </DialogWrapper>\n );\n};\n","import React, { useState } from 'react';\nimport dashedButtonStyle from 'styles/buttons/dashed-button.module.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { AppStoresDialog } from './app-stores-dialog';\n\nexport enum Store {\n GOOGLEPLAY = 'Google Play',\n}\n\nexport interface AppStore {\n name: string;\n url: string;\n}\n\nexport const AppStores = () => {\n const [openDialog, setOpenDialog] = useState(false);\n const [stores, setStores] = useState<AppStore[]>([]);\n\n return (\n  <Grid item container xs={12}>\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>App. Stores</Typography>\n   </Grid>\n   <Grid item xs={12}>\n    <Button onClick={() => setOpenDialog(true)} classes={{ root: dashedButtonStyle.root }} fullWidth>\n     <AddIcon /> Add Store\n    </Button>\n   </Grid>\n   <AppStoresDialog isOpen={openDialog} onClose={() => setOpenDialog(false)} stores={stores} setStores={setStores} />\n  </Grid>\n );\n};\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { ImportImagesCarousel } from './add-image';\nimport { VideoUpload } from './add-video';\nimport { AddSocial } from './add-social';\n\nexport const SocialNetwork = () => {\n return (\n  <Grid item container xs={12} spacing={3}>\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>Social Networks</Typography>\n   </Grid>\n   <Grid item xs={12}>\n    <AddSocial />\n   </Grid>\n   <Grid item xs={12}>\n    <VideoUpload />\n   </Grid>\n   <Grid item xs={12}>\n    <ImportImagesCarousel />\n   </Grid>\n   <Grid item xs={12}></Grid>\n  </Grid>\n );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { Fab, FormHelperText, Grid, TextField, Typography } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport circleButton from 'styles/buttons/circle-button.module.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { postTestimonials, uploadContent } from 'adapters';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetUrlBuilderData, SetUrlBuilderData, Testimonial } from 'store/url-builder';\n\nconst schema = yup.object().shape({\n rating: yup.string().required(),\n comment: yup.string().required(),\n fullName: yup.string().required(),\n title: yup.string().required(),\n});\n\nexport const TestimonialsDialog = ({ isOpen, onClose }: any) => {\n const [userImage, setUserImage] = useState<File>();\n const [loading, setLoading] = useState(false);\n const dispatch = useDispatch();\n const builderData = useSelector(GetUrlBuilderData);\n\n const {\n  register,\n  handleSubmit,\n  formState: { errors },\n } = useForm({ resolver: yupResolver(schema) });\n\n const handleImageSelected = (e: ChangeEvent<HTMLInputElement>) => e.target.files !== null && setUserImage(e.target.files[0]);\n\n const submit = async (data: Testimonial) => {\n  try {\n   data.rating = Number(data.rating);\n\n   if (userImage) {\n    const { data: avatarImage, message, success } = (await uploadContent(userImage)).data;\n    if (!success) throw new Error(message);\n\n    data.userPhoto = avatarImage;\n   }\n\n   setLoading(true);\n   postTestimonials([...builderData.testimonials, data])\n    .then(({ data }) => {\n     if (!data.success) return;\n     dispatch(SetUrlBuilderData(data.data));\n     onClose();\n    })\n    .finally(() => setLoading(false));\n  } catch (er) {}\n };\n\n return (\n  <DialogWrapper open={isOpen} onClose={onClose} title='Testimonials' onSubmit={handleSubmit(submit)} loading={loading}>\n   <Grid item xs={12} className='mb-4'>\n    <Typography variant='subtitle2'>Raiting</Typography>\n    <Rating {...register('rating')} />\n    {errors.rating && (\n     <FormHelperText variant='outlined' error>\n      {errors.rating?.message}\n     </FormHelperText>\n    )}\n   </Grid>\n   <Grid item xs={12} className='mb-4'>\n    <Typography variant='subtitle2'>Comment</Typography>\n    <TextField {...register('comment')} multiline rows={7} fullWidth error={!!errors.comment} helperText={errors.comment?.message} />\n   </Grid>\n   <Grid item xs={12} className='mb-4'>\n    <input onChange={handleImageSelected} style={{ display: 'none' }} accept='images/*' id='image-upload' type='file' />\n    <label htmlFor='image-upload'>\n     <Typography variant='subtitle2'>User Photo</Typography>\n     <Fab classes={{ root: circleButton.root }} color='primary' aria-label='add' component='span'>\n      <AddIcon />\n     </Fab>\n    </label>\n   </Grid>\n   <Grid item xs={12} className='mb-4'>\n    <Typography variant='subtitle2'>Full Name</Typography>\n    <TextField {...register('fullName')} error={!!errors.fullName} helperText={errors.fullName?.message} fullWidth />\n   </Grid>\n   <Grid item xs={12} className='mb-4'>\n    <Typography variant='subtitle2'>Title</Typography>\n    <TextField {...register('title')} error={!!errors.title} helperText={errors.title?.message} fullWidth />\n   </Grid>\n  </DialogWrapper>\n );\n};\n","import React from 'react';\nimport { Box, Grid, Card, Typography, Avatar } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { Testimonial } from 'store/url-builder';\nimport styles from './testimonial-carousel-item.module.scss';\nimport { APIBASE } from 'environment';\n\nexport interface TestimonialCarouselItemProps {\n testimonial: Testimonial;\n}\n\nexport const TestimonialCarouselItem = ({ testimonial }: TestimonialCarouselItemProps) => {\n return (\n  <Box className='ml-2 mr-2 h-100'>\n   <Grid container spacing={3}>\n    <Grid item xs={12}>\n     <Card variant='outlined' classes={{ root: styles.card }}>\n      <Rating value={testimonial.rating} disabled className='mb-2' />\n      <Typography variant='body2'>{testimonial.comment}</Typography>\n     </Card>\n    </Grid>\n    <Grid item container xs={12} justifyContent='center' alignItems='center'>\n     <Box display='flex' flexDirection='column' alignItems='center'>\n      <Avatar classes={{ root: styles.avatar }} src={APIBASE + '/' + testimonial.userPhoto.filePath} />\n      <Typography classes={{ root: styles.reviewerName }}>{testimonial.fullName}</Typography>\n      <Typography classes={{ root: styles.reviewerTitle }}>{testimonial.title}</Typography>\n     </Box>\n    </Grid>\n   </Grid>\n  </Box>\n );\n};\n","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport Slider from 'react-slick';\nimport { Testimonial } from 'store/url-builder';\nimport { TestimonialCarouselItem } from './testimonial-carousel-item';\n\nexport interface TestimonialCarouselProps {\n testimonials: Testimonial[];\n}\n\nexport const TestimonialCarousel = ({ testimonials }: TestimonialCarouselProps) => {\n return (\n  <Box className='mb-4'>\n   <Slider adaptiveHeight dots slidesPerRow={1} infinite={false}>\n    {testimonials.map((testimonial) => (\n     <Box className='mb-3'>\n      <TestimonialCarouselItem testimonial={testimonial} />\n     </Box>\n    ))}\n   </Slider>\n  </Box>\n );\n};\n","import React, { useState } from 'react';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport dashedButtonStyle from 'styles/buttons/dashed-button.module.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TestimonialsDialog } from './testimonials-dialog';\nimport { useSelector } from 'react-redux';\nimport { GetUrlBuilderData } from 'store/url-builder';\nimport { TestimonialCarousel } from './testimonial-carousel';\n\nexport const Testimonials = () => {\n const [dialog, setDialog] = useState(false);\n const builderData = useSelector(GetUrlBuilderData);\n\n const openDialog = () => {\n  setDialog(true);\n };\n\n const handleDialogClose = () => setDialog(false);\n return (\n  <Grid item container xs={12}>\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>\n     Testimonials\n    </Typography>\n   </Grid>\n   <Grid item xs={12} style={{ paddingBottom: '2em' }}>\n    <TestimonialCarousel testimonials={builderData.testimonials} />\n   </Grid>\n   <Grid item xs={12}>\n    <Button onClick={openDialog} classes={{ root: dashedButtonStyle.root }} fullWidth>\n     <AddIcon /> Add Testimonial\n    </Button>\n   </Grid>\n   {dialog && <TestimonialsDialog isOpen={dialog} onClose={handleDialogClose} />}\n  </Grid>\n );\n};\n","import React, { FC, useState } from 'react';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Grid } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { Input } from 'components/shared/input';\n\nconst schema = yup.object().shape({\n buttonName: yup.string().required().label('Button Name'),\n url: yup.string().required().label('URL'),\n});\n\nexport interface CustomCTADialogProps {\n isOpen: boolean;\n onClose(): void;\n}\n\nexport const CustomCTADialog: FC<CustomCTADialogProps> = ({ isOpen, onClose }) => {\n const [loading, setLoading] = useState(false);\n\n const submit = (data: any) => {\n  setLoading(true);\n  console.log(data);\n };\n\n const {\n  register,\n  handleSubmit,\n  formState: { errors },\n } = useForm({ resolver: yupResolver(schema) });\n\n return (\n  <DialogWrapper open={isOpen} onClose={onClose} title='Custom CTA Button' loading={loading} onSubmit={handleSubmit(submit)}>\n   {Object.keys(schema.fields).map((key) => {\n    const field = schema.fields[key] as any;\n    return (\n     <Grid key={key} item xs={12} className='mb-3'>\n      <Input\n       variant='outlined'\n       label={field.spec.label}\n       {...register(key)}\n       error={!!errors[key]}\n       helperText={errors[key]?.message}\n       fullWidth\n       disabled={loading}\n      />\n     </Grid>\n    );\n   })}\n  </DialogWrapper>\n );\n};\n","import { Grid, Typography, Button } from '@material-ui/core';\nimport dashedButtonStyle from 'styles/buttons/dashed-button.module.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport React, { useState } from 'react';\nimport { CustomCTADialog } from './custom-cta-dialog';\n\nexport const CustomCTA = () => {\n const [openDialog, setOpenDialog] = useState(false);\n\n return (\n  <Grid item container xs={12}>\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>Custom CTA Button</Typography>\n   </Grid>\n   <Grid item xs={12}>\n    <Button onClick={() => setOpenDialog(true)} classes={{ root: dashedButtonStyle.root }} fullWidth>\n     <AddIcon /> Custom CTA Button\n    </Button>\n   </Grid>\n   <CustomCTADialog isOpen={openDialog} onClose={() => setOpenDialog(false)} />\n  </Grid>\n );\n};\n","import React, { FC, useState } from 'react';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { Button, Divider, FormControl, Grid, MenuItem, Select, Typography } from '@material-ui/core';\nimport { AppStore, Store } from '..';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Input } from 'components/shared/input';\n\nconst schema = yup.object().shape({\n buttonName: yup.string().required().label('Button Name'),\n url: yup.string().required().label('URL'),\n});\n\nexport interface AppStoresDialogProps {\n isOpen: boolean;\n onClose(): void;\n stores: AppStore[];\n setStores(stores: AppStore[]): void;\n}\n\nexport const AppStoresDialog: FC<AppStoresDialogProps> = ({ isOpen, onClose, stores, setStores }) => {\n const [loading, setLoading] = useState(false);\n const [tempStores, setTempStores] = useState<AppStore[]>(stores);\n\n const { handleSubmit } = useForm({ resolver: yupResolver(schema) });\n\n const selectStore = (name: Store, idx: number) => {\n  const _store = [...tempStores];\n  _store[idx].name = name;\n  setTempStores(_store);\n };\n\n const addNewStore = () => setTempStores([...tempStores, { name: '', url: '' }]);\n\n const submit = (data: any) => {\n  setLoading(true);\n  console.log(data);\n };\n\n return (\n  <DialogWrapper title='App. Stores' onSubmit={handleSubmit(submit)} open={isOpen} onClose={onClose} loading={loading}>\n   {tempStores.map((tStore, idx) => (\n    <>\n     {idx > 0 && (\n      <Grid item xs={12} className='mb-4 mt-3'>\n       <Divider />\n      </Grid>\n     )}\n     <Grid item xs={12} className='mb-3'>\n      <Typography variant='subtitle2'>App. Store</Typography>\n      <FormControl fullWidth>\n       <Select labelId='providers-label' id='providers' value={tStore.name} onChange={(e) => selectStore(e.target.value as Store, idx)}>\n        {Object.keys(Store).map((key) => {\n         const store = (Store as any)[key];\n         return <MenuItem value={key}>{store}</MenuItem>;\n        })}\n       </Select>\n      </FormControl>\n     </Grid>\n     <Grid item xs={12} className='mb-3'>\n      <Input label='URL' variant='outlined' fullWidth />\n     </Grid>\n    </>\n   ))}\n   <Grid item container xs={12} justifyContent='center'>\n    <Button onClick={addNewStore}>\n     <AddIcon /> Add Another App. Store\n    </Button>\n   </Grid>\n  </DialogWrapper>\n );\n};\n","import React, { FC, useState } from 'react';\nimport { DialogWrapper } from 'components/shared/dialog';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { Input } from 'components/shared/input';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst schema = yup.object().shape({\n email: yup.string().email().required().label('Email'),\n});\n\nconst reorder = (list: Field[], startIndex: number, endIndex: number): Field[] => {\n const result = list;\n const [removed] = result.splice(startIndex, 1);\n result.splice(endIndex, 0, removed);\n\n return result;\n};\n\ninterface Field {\n name: string;\n type: string;\n required: boolean;\n editable: boolean;\n}\n\nexport interface ContactMeDialogProps {\n isOpen: boolean;\n onClose(): void;\n}\n\nexport const ContactMeDialog: FC<ContactMeDialogProps> = ({ isOpen, onClose }) => {\n const [loading, setLoading] = useState(false);\n const [fields, setFields] = useState<Field[]>([\n  { name: 'Full Name', type: 'Text', required: true, editable: false },\n  { name: 'Email Adress', type: 'Email', required: true, editable: false },\n  { name: 'Phone Number', type: 'Number', required: true, editable: false },\n  { name: 'Message', type: 'Textarea', required: true, editable: false },\n ]);\n\n const submit = (data: any) => {\n  setLoading(true);\n  console.log(data);\n };\n\n const {\n  register,\n  handleSubmit,\n  formState: { errors },\n } = useForm({ resolver: yupResolver(schema) });\n\n const addNewField = () => {\n  const nextField = fields.filter((field) => field.name.includes('Custom Field')).length + 1;\n\n  const field: Field = {\n   name: 'Custom Field ' + nextField,\n   type: 'Text',\n   required: false,\n   editable: true,\n  };\n\n  setFields([...fields, field]);\n };\n\n const onDragEnd = (result: any) => {\n  // dropped outside the list\n  if (!result.destination) return;\n  const items = reorder(fields, result.source.index, result.destination.index);\n  setFields(items);\n };\n\n return (\n  <DialogWrapper open={isOpen} onClose={onClose} title='Contact Me' loading={loading} onSubmit={handleSubmit(submit)}>\n   <Grid item xs={12} className='mb-3'>\n    <Input\n     variant='outlined'\n     label='I want to receive emails on this address'\n     {...register('email')}\n     error={!!errors.email}\n     helperText={errors.email?.message}\n     fullWidth\n     disabled={loading}\n    />\n   </Grid>\n   <Grid item xs={12}>\n    <Typography color='textPrimary' variant='h6'>\n     Fields\n    </Typography>\n   </Grid>\n   <Grid item xs={12} className='mb-4'>\n    <DragDropContext onDragEnd={onDragEnd}>\n     {/* TODO: Fix drag&drop container height on drag */}\n     <TableContainer style={{ overflow: 'hidden' }}>\n      <Table size='small'>\n       <TableHead>\n        <TableRow>\n         <TableCell></TableCell>\n         <TableCell align='left'>Name</TableCell>\n         <TableCell align='left'>Type</TableCell>\n         <TableCell align='left'>Required</TableCell>\n         <TableCell></TableCell>\n        </TableRow>\n       </TableHead>\n       <Droppable droppableId='droppable'>\n        {(provided) => (\n         <TableBody {...provided.droppableProps} ref={provided.innerRef}>\n          {fields.map((field, idx) => (\n           <Draggable key={field.name} draggableId={field.name} index={idx}>\n            {(provided) => (\n             <TableRow ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n              <TableCell>\n               <DragHandleIcon />\n              </TableCell>\n              <TableCell align='left'>{field.name}</TableCell>\n              <TableCell align='left'>{field.type}</TableCell>\n              <TableCell align='left'>{field.required && <CheckIcon fontSize='small' />}</TableCell>\n              <TableCell align='left'>\n               <Button variant='text' color='primary' disabled={!field.editable}>\n                Edit\n               </Button>\n              </TableCell>\n             </TableRow>\n            )}\n           </Draggable>\n          ))}\n         </TableBody>\n        )}\n       </Droppable>\n      </Table>\n     </TableContainer>\n    </DragDropContext>\n   </Grid>\n   <Grid justifyContent='center' item container xs={12}>\n    <Button variant='text' onClick={addNewField}>\n     <AddIcon />\n     Add New Field\n    </Button>\n   </Grid>\n  </DialogWrapper>\n );\n};\n","import { Box, Button, Grid, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport hoverStyle from 'styles/hover-overlay.module.scss';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { Input } from 'components/shared/input';\nimport roundedButtonStyle from 'styles/buttons/rounded-button.module.scss';\nimport { ContactMeDialog } from './contact-me-dialog';\n\nexport const ContactMe = () => {\n const [contactMeDialog, setContactMeDialog] = useState(false);\n\n const handleClose = () => setContactMeDialog(false);\n\n return (\n  <Box className={hoverStyle.root}>\n   <Grid item xs={12}>\n    <Typography variant='h6' gutterBottom>\n     Contact Me\n    </Typography>\n   </Grid>\n   <Box style={{ margin: '0 1.5em' }}>\n    <Grid container spacing={2}>\n     <Grid item xs={12}>\n      <Input label='Full Name' fullWidth disabled />\n     </Grid>\n     <Grid item xs={12}>\n      <Input label='Email Address' fullWidth disabled />\n     </Grid>\n     <Grid item xs={12}>\n      <Input label='Phone Number' fullWidth disabled />\n     </Grid>\n     <Grid item xs={12}>\n      <Input label='Message' fullWidth disabled />\n     </Grid>\n     <Grid item xs={12}>\n      <Button className={roundedButtonStyle.root} size='large' variant='contained' color='primary' fullWidth disabled>\n       Send Message\n      </Button>\n     </Grid>\n    </Grid>\n   </Box>\n   <Box onClick={() => setContactMeDialog(true)} className={hoverStyle.root_content}>\n    <Typography variant='subtitle2' className='d-flex aling-items_center' color='textSecondary'>\n     <EditOutlinedIcon fontSize='small' /> <b>Edit Contact Information</b>\n    </Typography>\n   </Box>\n   <ContactMeDialog isOpen={contactMeDialog} onClose={handleClose} />\n  </Box>\n );\n};\n","import React, { useEffect } from 'react';\nimport { BusinessCard } from 'components/business-card';\nimport { Card, Container, Grid } from '@material-ui/core';\nimport { LcardBadge } from 'components/shared/lcard-badge';\nimport { Information } from './information';\nimport { AboutMe } from './about-me';\nimport { SocialNetwork } from './social-network';\nimport { Testimonials } from './testimonials';\nimport { CustomCTA } from './custom-CTA';\nimport { AppStores } from './app-stores';\nimport { ContactMe } from './contact-me';\nimport { getBuilderData } from 'adapters';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetUrlBuilderData, SetUrlBuilderData } from 'store/url-builder';\n\nexport default function URLDesigner() {\n const state = useSelector(GetUrlBuilderData);\n const dispatch = useDispatch();\n\n useEffect(() => {\n  getBuilderData().then(({ data }) => data.data && dispatch(SetUrlBuilderData(data.data)));\n }, []);\n\n console.log(state);\n\n return (\n  <Container maxWidth='md'>\n   <Grid container justifyContent='center'>\n    <Grid item container xs={12} spacing={2}>\n     <Grid item xs={12}>\n      <LcardBadge />\n     </Grid>\n     <Grid item xs={12}>\n      <BusinessCard />\n     </Grid>\n     <Grid item xs={12}>\n      <Card>\n       <Grid container style={{ padding: '2em' }} spacing={3}>\n        <Grid item xs={12}>\n         <Information />\n        </Grid>\n        <Grid item xs={12}>\n         <AboutMe />\n        </Grid>\n        <Grid item xs={12}>\n         <SocialNetwork />\n        </Grid>\n        <Grid item xs={12}>\n         <Testimonials />\n        </Grid>\n        <Grid item xs={12}>\n         <CustomCTA />\n        </Grid>\n        <Grid item xs={12}>\n         <AppStores />\n        </Grid>\n        <Grid item xs={12}>\n         <ContactMe />\n        </Grid>\n       </Grid>\n      </Card>\n     </Grid>\n    </Grid>\n   </Grid>\n  </Container>\n );\n}\n"],"sourceRoot":""}