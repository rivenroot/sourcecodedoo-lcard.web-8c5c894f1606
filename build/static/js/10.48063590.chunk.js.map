{"version":3,"sources":["styles/buttons/rounded-button.module.scss","components/shared/lcard-badge/index.tsx","components/shared/copyright/index.tsx","components/auth/signup/signup.module.scss","enums/paymentOptions.ts","enums/subscriptionType.ts","components/auth/signup/index.tsx"],"names":["module","exports","LcardBadge","variant","color","component","CopyRights","display","gutterBottom","PaymentOptions","SubscriptionType","schema","yup","shape","firstName","required","lastName","email","companyName","password","min","max","confirmPassword","SignUp","history","useHistory","useState","acceptTerms","setAcceptTerms","BUSINESS","subscriptionType","setSubscriptionType","ANNUAL","paymentOption","setPaymentOption","useEffect","BASIC","FREE","MONTHLY","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","signUp","data","a","http","post","UserAPI","SIGNUP","payment","response","error","toast","success","message","push","RoutesProps","VERIFYACCOUNT","className","style","container","card_container","Card","card_container__card","onSubmit","Grid","spacing","item","xs","Typography","RadioGroup","row","name","defaultValue","value","onChange","e","target","Object","keys","map","key","FormControlLabel","control","Radio","ENTERPRISE","label","labelPlacement","card_container__card__paymentOptions","Button","roundedButtonStyle","root","size","fullWidth","TextField","helperText","type","FormControl","Checkbox","checked","Link","href","onClick","LOGIN"],"mappings":"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","file":"static/js/10.48063590.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"rounded-button_root__3zehj\"};","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const LcardBadge = () => (\n  <Typography variant='h6' color=\"primary\" component=\"span\">\n   L-CARD PRO\n  </Typography>\n);\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const CopyRights = () => (\n <Typography variant='caption' display='block' color=\"textSecondary\" gutterBottom>\n  Copyright Â© OrangeTreeApps, LLC. All rights reserved.\n </Typography>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"signup_container__1RUVH\",\"card_container\":\"signup_card_container__H4j23\",\"card_container__card\":\"signup_card_container__card__21D0q\",\"card_container__card__paymentOptions\":\"signup_card_container__card__paymentOptions__1_sLg\"};","export enum PaymentOptions {\n FREE = 'free',\n ANNUAL = 'annual',\n MONTHLY = 'monthly',\n}\n","export enum SubscriptionType {\n BASIC = 'basic',\n BUSINESS = 'business',\n ENTERPRISE = 'enterprise',\n}\n","import React, { useEffect, useState } from 'react';\nimport { LcardBadge } from 'components/shared/lcard-badge';\nimport style from './signup.module.scss';\nimport roundedButtonStyle from 'styles/buttons/rounded-button.module.scss';\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, Grid, Link, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { CopyRights } from 'components/shared/copyright';\nimport { PaymentOptions } from 'enums/paymentOptions';\nimport { RoutesProps } from 'routes';\nimport { SubscriptionType } from 'enums/subscriptionType';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { http, UserAPI } from 'adapters';\nimport { toast } from 'react-toastify';\n\nconst schema = yup.object().shape({\n firstName: yup.string().required(),\n lastName: yup.string().required(),\n email: yup.string().email().required(),\n companyName: yup.string().required(),\n password: yup.string().min(4).max(25).required(),\n confirmPassword: yup.string().min(4).max(25).required(),\n});\n\nexport default function SignUp() {\n const history = useHistory();\n const [acceptTerms, setAcceptTerms] = useState(false);\n const [subscriptionType, setSubscriptionType] = useState<SubscriptionType>(SubscriptionType.BUSINESS);\n const [paymentOption, setPaymentOption] = useState<PaymentOptions>(PaymentOptions.ANNUAL);\n\n useEffect(() => {\n  if (subscriptionType === SubscriptionType.BASIC) setPaymentOption(PaymentOptions.FREE);\n  if (subscriptionType === SubscriptionType.BUSINESS) setPaymentOption(PaymentOptions.MONTHLY);\n }, [subscriptionType]);\n\n const {\n  register,\n  handleSubmit,\n  formState: { errors },\n } = useForm({ resolver: yupResolver(schema) });\n\n const signUp = async (data: any) => {\n  const response = await http.post(UserAPI.SIGNUP, { ...data, subscriptionType, payment: paymentOption });\n  if (response.data.error) return;\n  toast.success(response.data.message);\n  history.push(RoutesProps.VERIFYACCOUNT);\n };\n\n return (\n  <div className={style.container}>\n   <div className='d-flex justify-content_center'>\n    <LcardBadge />\n   </div>\n   <div className={style.card_container}>\n    <Card>\n     <form className={style.card_container__card} onSubmit={handleSubmit(signUp)}>\n      <Grid container spacing={2}>\n       <Grid item xs={12}>\n        <Typography className='text-align_center' variant='h4' gutterBottom>\n         <b>Create Account</b>\n        </Typography>\n       </Grid>\n       <Grid item xs={12}>\n        <Typography variant='button'>\n         <b>Subscription Type</b>\n        </Typography>\n        <RadioGroup\n         row\n         aria-label='SubscriptionType'\n         name='SubscriptionType'\n         defaultValue='Business'\n         value={subscriptionType}\n         onChange={(e) => setSubscriptionType(e.target.value as SubscriptionType)}>\n         {Object.keys(SubscriptionType).map((key) => (\n          <FormControlLabel\n           value={(SubscriptionType as any)[key]}\n           control={<Radio color={subscriptionType !== SubscriptionType.ENTERPRISE ? 'primary' : 'secondary'} />}\n           label={(SubscriptionType as any)[key]}\n           labelPlacement='end'\n          />\n         ))}\n        </RadioGroup>\n       </Grid>\n       {subscriptionType !== SubscriptionType.ENTERPRISE ? (\n        <Grid item xs={12}>\n         <Typography variant='button'>\n          <b>Payment</b>\n         </Typography>\n         <RadioGroup\n          row\n          aria-label='Payment'\n          name='Payment'\n          value={paymentOption}\n          onChange={(e) => setPaymentOption(e.target.value as PaymentOptions)}>\n          {subscriptionType === SubscriptionType.BASIC && (\n           <FormControlLabel value={PaymentOptions.FREE} control={<Radio color='primary' />} label={PaymentOptions.FREE} labelPlacement='end' />\n          )}\n          {subscriptionType === SubscriptionType.BUSINESS && (\n           <>\n            <FormControlLabel value={PaymentOptions.ANNUAL} control={<Radio color='primary' />} label={PaymentOptions.ANNUAL} labelPlacement='end' />\n            <FormControlLabel\n             value={PaymentOptions.MONTHLY}\n             control={<Radio color='primary' />}\n             label={PaymentOptions.MONTHLY}\n             labelPlacement='end'\n            />\n           </>\n          )}\n         </RadioGroup>\n         {paymentOption === PaymentOptions.ANNUAL && (\n          <div className={style.card_container__card__paymentOptions}>\n           <b>$48</b> / year (save 20%)\n          </div>\n         )}\n         {paymentOption === PaymentOptions.MONTHLY && (\n          <div className={style.card_container__card__paymentOptions}>\n           <b>$5</b> / month\n          </div>\n         )}\n        </Grid>\n       ) : (\n        <Grid item xs={12}>\n         <Button className={roundedButtonStyle.root} size='large' variant='contained' color='secondary' fullWidth>\n          Contact Sales\n         </Button>\n        </Grid>\n       )}\n       <Grid item xs={6}>\n        <TextField {...register('firstName')} label='First Name' error={!!errors.firstName} helperText={errors.firstName?.message} fullWidth />\n       </Grid>\n       <Grid item xs={6}>\n        <TextField {...register('lastName')} label='Last Name' error={!!errors.lastName} helperText={errors.lastName?.message} fullWidth />\n       </Grid>\n       <Grid item xs={12}>\n        <TextField fullWidth {...register('email')} label='Email address' error={!!errors.email} helperText={errors.email?.message} />\n       </Grid>\n       <Grid item xs={12}>\n        <TextField\n         fullWidth\n         {...register('companyName')}\n         label='Company name'\n         error={!!errors.companyName}\n         helperText={errors.companyName?.message}\n        />\n       </Grid>\n       <Grid item xs={12}>\n        <TextField\n         fullWidth\n         {...register('password')}\n         label='Password'\n         error={!!errors.password}\n         helperText={errors.password?.message}\n         type='password'\n        />\n       </Grid>\n       <Grid item xs={12}>\n        <TextField\n         fullWidth\n         {...register('confirmPassword')}\n         label='Repeat Password'\n         error={!!errors.confirmPassword}\n         helperText={errors.confirmPassword?.message}\n         type='password'\n        />\n       </Grid>\n       <Grid item xs={12}>\n        <FormControl required error={true}>\n         <FormControlLabel\n          control={<Checkbox checked={acceptTerms} onChange={(e) => setAcceptTerms(e.target.checked)} name='terms' color='primary' />}\n          label='I agree Terms and Privacy Policy'\n         />\n        </FormControl>\n       </Grid>\n       <Grid item xs={12}>\n        <Button\n         className={roundedButtonStyle.root}\n         size='large'\n         variant='contained'\n         color={subscriptionType !== SubscriptionType.ENTERPRISE ? 'primary' : 'secondary'}\n         type='submit'\n         fullWidth>\n         {subscriptionType !== SubscriptionType.ENTERPRISE ? 'Start your 14-day Free Trial' : 'Create Account'}\n        </Button>\n       </Grid>\n      </Grid>\n     </form>\n    </Card>\n    <div className='d-flex aling-items_center mt-4'>\n     <Typography className='mr-1' variant='caption'>\n      Already have an account?\n     </Typography>\n     <Link href='#' variant='subtitle1' onClick={() => history.push(RoutesProps.LOGIN)}>\n      Login\n     </Link>\n    </div>\n   </div>\n   <div className='d-flex justify-content_center'>\n    <CopyRights />\n   </div>\n  </div>\n );\n}\n"],"sourceRoot":""}